Q Left rotate
#include<stdio.h>
int main()
{
    int n,i,j,temp;
    printf("Enter the size of array: ");
    scanf("%d",&n);
    int arr[n];
    printf("Enter the elements of array: ");
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("Enter the number of times you want to rotate the array: ");
    scanf("%d",&j);
    while(j>0)
    {
        temp=arr[0];
        for(i=0;i<n-1;i++)
        {
            arr[i]=arr[i+1];
        }
        arr[n-1]=temp;
        j--;
    }
    printf("The array after left rotation is: ");
    for(i=0;i<n;i++)
    {
        printf("%d ",arr[i]);
    }
    return 0;
}

Q Right rotate
#include<stdio.h>
int main()
{
    int n,i,j,temp;
    printf("Enter the size of array: ");
    scanf("%d",&n);
    int arr[n];
    printf("Enter the elements of array: ");
    for(i=0;i<n;i++)
    {
        scanf("%d",&arr[i]);
    }
    printf("Enter the number of times you want to rotate the array: ");
    scanf("%d",&j);
    while(j>0)
    {
        temp=arr[n-1];
        for(i=n-1;i>0;i--)
        {
            arr[i]=arr[i-1];
        }
        arr[0]=temp;
        j--;
    }
    printf("The array after right rotation is: ");
    for(i=0;i<n;i++)
    {
        printf("%d ",arr[i]);
    }
    return 0;
}

Q Add two matrix
#include<stdio.h>
int main()
{
    int n,i,j;
    printf("Enter the size of matrix: ");
    scanf("%d",&n);
    int arr1[n][n],arr2[n][n],arr3[n][n];
    printf("Enter the elements of first matrix: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&arr1[i][j]);
        }
    }
    printf("Enter the elements of second matrix: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&arr2[i][j]);
        }
    }
    printf("The sum of the two matrix is:\n ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            arr3[i][j]=arr1[i][j]+arr2[i][j];
            printf("%d ",arr3[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Q Subtract two matrix
#include<stdio.h>
int main()
{
    int n,i,j;
    printf("Enter the size of matrix: ");
    scanf("%d",&n);
    int arr1[n][n],arr2[n][n],arr3[n][n];
    printf("Enter the elements of matrix 1: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&arr1[i][j]);
        }
    }
    printf("Enter the elements of matrix 2: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&arr2[i][j]);
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            arr3[i][j]=arr1[i][j]-arr2[i][j];
        }
    }
    printf("The matrix is: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            printf("%d ",arr3[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Q Scalar matrix multiplication
#include<stdio.h>
int main()
{
    int n,i,j;
    printf("Enter the size of matrix: ");
    scanf("%d",&n);
    int arr[n][n];
    printf("Enter the elements of matrix: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            scanf("%d",&arr[i][j]);
        }
    }
    int s;
    printf("Enter the sclar: ");
    scanf("%d",&s);
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            arr[i][j]=arr[i][j]*s;
        }
    }
    printf("The matrix is: ");
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            printf("%d ",arr[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Q Multiply two matrix
#include<stdio.h>
int main()
{
    int a[10][10],b[10][10],c[10][10],i,j,k,m,n,p,q;
    printf("Enter the order of first matrix\n");
    scanf("%d%d",&m,&n);
    printf("Enter the order of second matrix\n");
    scanf("%d%d",&p,&q);
    if(n==p)
    {
        printf("Enter the elements of first matrix\n");
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                scanf("%d",&a[i][j]);
            }
        }
        printf("Enter the elements of second matrix\n");
        for(i=0;i<p;i++)
        {
            for(j=0;j<q;j++)
            {
                scanf("%d",&b[i][j]);
            }
        }
        for(i=0;i<m;i++)
        {
            for(j=0;j<q;j++)
            {
                c[i][j]=0;
                for(k=0;k<n;k++)
                {
                    c[i][j]=c[i][j]+a[i][k]*b[k][j];
                }
            }
        }
        printf("The product of two matrices is\n");
        for(i=0;i<m;i++)
        {
            for(j=0;j<q;j++)
            {
                printf("%d\t",c[i][j]);
            }
            printf("\n");
        }
    }
    else
    {
        printf("Multiplication is not possible\n");
    }
    return 0;
}

Q  Check if two matrix are equal or not
#include<stdio.h>
int main()
{
    int a[10][10],b[10][10],i,j,m,n,p,q,flag=0;
    printf("Enter the order of first matrix\n");
    scanf("%d%d",&m,&n);
    printf("Enter the order of second matrix\n");
    scanf("%d%d",&p,&q);
    if(m==p&&n==q)
    {
        printf("Enter the elements of first matrix\n");
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                scanf("%d",&a[i][j]);
            }
        }
        printf("Enter the elements of second matrix\n");
        for(i=0;i<p;i++)
        {
            for(j=0;j<q;j++)
            {
                scanf("%d",&b[i][j]);
            }
        }
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(a[i][j]!=b[i][j])
                {
                    flag=1;
                    break;
                }
            }
        }
        if(flag==0)
        {
            printf("The given matrices are equal\n");
        }
        else
        {
            printf("The given matrices are not equal\n");
        }
    }
    else
    {
        printf("The given matrices are not equal\n");
    }
    return 0;
}

Q Sum of main diagonal elements of a matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,sum=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i==j)
            {
                sum=sum+a[i][j];
            }
        }
    }
    printf("The sum of main diagonal elements of matrix is: %d",sum);
    return 0;
}

Q Sum of minor diagonal elements of a matrix
#include<stdio.h>
int main()
{
    int a[10][10],b[10][10],i,j,r,c,sum=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of first matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("Enter the elements of second matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&b[i][j]);	
        }
    }
    printf("The first matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    printf("The second matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",b[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i+j==r-1)
            {
                sum=sum+a[i][j]+b[i][j];
            }
        }
    }
    printf("The sum of minor diagonal elements of matrix is: %d",sum);
    return 0;
}

Q sum of each row and column 
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,sum=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            sum=sum+a[i][j];
        }
        printf("The sum of %d row is: %d\n",i+1,sum);
        sum=0;
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            sum=sum+a[j][i];
        }
        printf("The sum of %d column is: %d\n",i+1,sum);
        sum=0;
    }
    return 0;
}

Q interchange diagonals of a matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,temp;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i==j)
            {
                temp=a[i][j];
                a[i][j]=a[i][c-1-i];
                a[i][c-1-i]=temp;
            }
        }
    }
    printf("The matrix after interchanging diagonals is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    return 0;
}

Q Find Upper triangle 
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,flag=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i>j)
            {
                if(a[i][j]!=0)
                {
                    flag=1;
                    break;
                }
            }
        }
    }
    if(flag==0)
    {
        printf("The matrix is upper triangular matrix");
    }
    else
    {
        printf("The matrix is not upper triangular matrix");
    }
    return 0;
}

Q Find Lower triangle 
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,flag=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i<j)
            {
                if(a[i][j]!=0)
                {
                    flag=1;
                    break;
                }
            }
        }
    }
    if(flag==0)
    {
        printf("The matrix is lower triangular matrix");
    }
    else
    {
        printf("The matrix is not lower triangular matrix");
    }
    return 0;
}

Q sum of Upper triangle
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,sum=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i<j)
            {
                sum=sum+a[i][j];
            }
        }
    }
    printf("The sum of upper triangular matrix is %d",sum);
    return 0;
}

Q sum of Lower triangle
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,sum=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i>j)
            {
                sum=sum+a[i][j];
            }
        }
    }
    printf("The sum of lower triangular matrix is %d",sum);
    return 0;
}

Q Transpose of matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    printf("The transpose of matrix is:\n");
    for(i=0;i<c;i++)
    {
        for(j=0;j<r;j++)
        {
            printf("%d\t",a[j][i]);	
        }
        printf("\n");
    }
    return 0;
}   

Q Determinant of Matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,det=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    if(r==c)
    {
        for(i=0;i<r;i++)
        {
            det=det+(a[0][i]*(a[1][(i+1)%3]*a[2][(i+2)%3]-a[1][(i+2)%3]*a[2][(i+1)%3]));
        }
        printf("The determinant of matrix is %d",det);
    }
    else
    {
        printf("The matrix is not a square matrix");
    }
    return 0;
}

Q check identity matix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,flag=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(i==j)
            {
                if(a[i][j]!=1)
                {
                    flag=1;
                    break;
                }
            }
            else
            {
                if(a[i][j]!=0)
                {
                    flag=1;
                    break;
                }
            }
        }
    }
    if(flag==0)
    {
        printf("The matrix is identity matrix");
    }
    else
    {
        printf("The matrix is not identity matrix");
    }
    return 0;
}

Q check sparse matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,count=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(a[i][j]==0)
            {
                count++;
            }
        }
    }
    if(count>((r*c)/2))
    {
        printf("The matrix is sparse matrix");
    }
    else
    {
        printf("The matrix is not sparse matrix");
    }
    return 0;
}

Q check Symmetric Matrix
#include<stdio.h>
int main()
{
    int a[10][10],i,j,r,c,count=0;
    printf("Enter the number of rows and columns of matrix: ");
    scanf("%d%d",&r,&c);
    printf("Enter the elements of matrix: ");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            scanf("%d",&a[i][j]);	
        }
    }
    printf("The matrix is:\n");
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            printf("%d\t",a[i][j]);	
        }
        printf("\n");
    }
    for(i=0;i<r;i++)
    {
        for(j=0;j<c;j++)
        {
            if(a[i][j]!=a[j][i])
            {
                count++;
            }
        }
    }
    if(count==0)
    {
        printf("The matrix is symmetric matrix");
    }
    else
    {
        printf("The matrix is not symmetric matrix");
    }
    return 0;
}
